name: CI/CD Pipeline

# Trigger the workflow on pushes to the main branch and on pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install dependencies and run tests for each service
      - name: Install dependencies and run tests
        working-directory: ./services/auth-service
        run: |
          npm install
          npm test

      - name: Install dependencies and run tests
        working-directory: ./services/listing-service
        run: |
          npm install
          npm test

      - name: Install dependencies and run tests
        working-directory: ./services/search-service
        run: |
          npm install
          npm test

      - name: Install frontend dependencies and run tests
        working-directory: ./frontend
        run: |
          npm install
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build Docker images (add usernameeeee)
      - name: Build and tag Docker images
        run: |
          docker build -t /frontend ./frontend
          docker build -t /auth-service ./services/auth-service
          docker build -t /listing-service ./services/listing-service
          docker build -t /search-service ./services/search-service
          docker build -t /api-gateway ./services/api-gateway

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Push Docker images to Docker Hub   (add usernameeeee)
      - name: Push Docker images
        run: |
          docker push /frontend
          docker push /auth-service
          docker push /listing-service
          docker push /search-service
          docker push /api-gateway

      # Deploy to Google Cloud (or your preferred platform)
      - name: Deploy to Google Cloud
        run: |
          # FINISH WHEN GCLOUD IS SETUP
